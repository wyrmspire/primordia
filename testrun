#!/usr/bin/env bash
set -euo pipefail

RUN_NAME=pls-hot-swap-final
PROJECT_ID=${PROJECT_ID:-ticktalk-472521}
PUBSUB_BASE="http://localhost:8083/v1/projects/$PROJECT_ID"
API="http://localhost:8080"

b64(){ printf "%s" "$1" | base64 -w0 2>/dev/null || printf "%s" "$1" | base64 -b0; }

echo "[health] /healthz"
curl -fsS "$API/healthz" && echo

echo "[seed] files for $RUN_NAME"
curl -sS -X POST "$API/file" -H 'content-type: application/json' -d @- <<JSON
{"path":"runs/$RUN_NAME/package.json","content":"{\"name\":\"$RUN_NAME\",\"type\":\"module\",\"dependencies\":{}}"}
JSON
curl -sS -X POST "$API/file" -H 'content-type: application/json' -d @- <<'JSON'
{"path":"runs/pls-hot-swap-final/index.js","content":"import http from 'http';const s=http.createServer(async(req,res)=>{if(req.url.startsWith('/hello')){const q=Date.now();const {default:handler}=await import(`./handler.js?ts=${q}`);return handler(req,res);}res.statusCode=404;res.end('Not Found');});s.listen(8080,()=>console.log('service listening :8080'));"} 
JSON
curl -sS -X POST "$API/file" -H 'content-type: application/json' -d @- <<'JSON'
{"path":"runs/pls-hot-swap-final/handler.js","content":"export default (req,res)=>{res.writeHead(200,{'content-type':'application/json'});res.end(JSON.stringify({ok:true,message:'v1 from handler',t:new Date().toISOString()}));};"}
JSON

echo "[pubsub] publish SERVICE_DEPLOYED"
MSG=$(b64 "{\"type\":\"SERVICE_DEPLOYED\",\"name\":\"$RUN_NAME\"}")
curl -s -H "Content-Type: application/json" \
  -d "{\"messages\":[{\"data\":\"$MSG\"}]}" \
  "$PUBSUB_BASE/topics/primordia-builds:publish" | sed 's/^/  /'

echo
echo "[proxy] GET /hello"
curl -sS -X POST "$API/workspace/proxy" \
  -H 'content-type: application/json' \
  -d "{\"url\":\"http://primordia-local-service-$RUN_NAME:8080/hello\",\"method\":\"GET\"}"

echo
echo "[hotswap] handler -> v2"
curl -sS -X POST "$API/file" -H 'content-type: application/json' -d @- <<'JSON'
{"path":"runs/pls-hot-swap-final/handler.js","content":"export default (req,res)=>{res.writeHead(200,{'content-type':'application/json'});res.end(JSON.stringify({ok:true,message:'v2 LIVE swap',t:new Date().toISOString()}));};"}
JSON

echo "[proxy] GET /hello (after swap)"
curl -sS -X POST "$API/workspace/proxy" \
  -H 'content-type: application/json' \
  -d "{\"url\":\"http://primordia-local-service-$RUN_NAME:8080/hello\",\"method\":\"GET\"}"
echo
