#!/usr/bin/env bash
set -euo pipefail

RUN_NAME=pls-hot-swap-final
PROJECT_ID=${PROJECT_ID:-ticktalk-472521}
TOPIC=${PUBSUB_TOPIC:-primordia-builds}
PUBSUB_BASE="http://localhost:8083/v1/projects/$PROJECT_ID"

echo "[health] /healthz"
for i in {1..40}; do
  if curl -fsS http://localhost:8080/healthz >/dev/null 2>&1; then
    curl -fsS http://localhost:8080/healthz && echo
    break
  fi
  sleep 0.5
  if [ "$i" -eq 40 ]; then echo "‚ùå primordia not healthy"; exit 1; fi
done

echo "[seed] files for $RUN_NAME"
curl -sS -X POST http://localhost:8080/file -H 'content-type: application/json' -d @- <<'JSON'
{"path":"runs/pls-hot-swap-final/package.json","content":"{\"name\":\"primordia-hot-swap-final\",\"type\":\"module\",\"dependencies\":{}}"}
JSON
curl -sS -X POST http://localhost:8080/file -H 'content-type: application/json' -d @- <<'JSON'
{"path":"runs/pls-hot-swap-final/index.js","content":"import http from 'http';const s=http.createServer(async(req,res)=>{if(req.url.startsWith('/hello')){const q=Date.now();const {default:handler}=await import(`./handler.js?ts=${q}`);return handler(req,res);}res.statusCode=404;res.end('Not Found');});s.listen(8080,()=>console.log('service listening :8080'));"} 
JSON
curl -sS -X POST http://localhost:8080/file -H 'content-type: application/json' -d @- <<'JSON'
{"path":"runs/pls-hot-swap-final/handler.js","content":"export default (req,res)=>{res.writeHead(200,{'content-type':'application/json'});res.end(JSON.stringify({ok:true,message:'v1 from handler',t:new Date().toISOString()}));};"}
JSON

echo "[pubsub] publish SERVICE_DEPLOYED"
MSG=$(printf '{"type":"SERVICE_DEPLOYED","name":"%s"}' "$RUN_NAME" | base64 -w0 2>/dev/null || printf '{"type":"SERVICE_DEPLOYED","name":"%s"}' "$RUN_NAME" | base64)
curl -s -H "Content-Type: application/json" \
  -d "{\"messages\":[{\"data\":\"$MSG\"}]}" \
  "$PUBSUB_BASE/topics/$TOPIC:publish" | sed -n '1,4p'; echo

echo
echo "[proxy] GET /hello"
curl -sS -X POST http://localhost:8080/workspace/proxy \
  -H 'content-type: application/json' \
  -d '{"url":"http://primordia-local-service-pls-hot-swap-final:8080/hello","method":"GET"}' | sed -n '1,6p'

echo "[hotswap] handler -> v2"
curl -sS -X POST http://localhost:8080/file -H 'content-type: application/json' -d @- >/dev/null <<'JSON'
{"path":"runs/pls-hot-swap-final/handler.js","content":"export default (req,res)=>{res.writeHead(200,{'content-type':'application/json'});res.end(JSON.stringify({ok:true,message:'v2 LIVE swap',t:new Date().toISOString()}));};"}
JSON

echo -n "[proxy] GET /hello (after swap) "
curl -sS -X POST http://localhost:8080/workspace/proxy \
  -H 'content-type: application/json' \
  -d '{"url":"http://primordia-local-service-pls-hot-swap-final:8080/hello","method":"GET"}' | sed -n '1,6p'
